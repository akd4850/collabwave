<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.myapp.mapper.DeptMapper">
	
  <resultMap type="DeptDto" id="DeptDtoMap">
    <id property="deptCode" column="DEPT_CODE" />
	<result property="deptName" column="DEPT_NAME" />
	<result property="deptLevel" column="DEPT_LEVEL" />
	<result property="deptLeaderEmpCode" column="DEPT_LEADER_EMP_CODE" />
	<result property="deptLocation" column="DEPT_LOCATION" />
	<result property="deptCreatedate" column="DEPT_CREATEDATE" />
	<result property="useYn" column="USE_YN" />
	<result property="deptUpstairCode" column="DEPT_UPSTAIR_CODE" />
	<association property="emp" javaType="EmpDto">
	  <id property="empCode" column="EMP_CODE" />
	  <result property="empName" column="EMP_NAME" />
	  <result property="statusCode" column="STATUS_CODE"/>
    </association>
    <!--
    <association property="pos" javaType="PosDto">
	  <id property="posCode" column="POSITION_CODE" />
	  <result property="posName" column="POSITION_NAME" />
    </association>
    -->
  </resultMap>
	
  <select id="getDeptList">
    SELECT  DEPT_CODE,
		    DEPT_NAME,
		    DEPT_LEVEL,
		    DEPT_LEADER_EMP_CODE,
		    DEPT_LOCATION,
		    DEPT_CREATEDATE,
		    USE_YN,
		    DEPT_UPSTAIR_CODE
    FROM    DEPT_T
	<where>
	  <if test="deptCode!='d0000'">DEPT_UPSTAIR_CODE = #{deptCode}</if>
	  <if test="deptCode=='d0000'">DEPT_LEVEL = 0</if>
    </where>
  </select>
	
  <select id="getBelongEmpList" resultType="EmpDto">
	SELECT  A.EMP_CODE,
        	A.EMP_NAME
	  FROM    EMP_T A
	  LEFT OUTER JOIN DEPT_T B
		ON  A.DEPT_CODE = B.DEPT_CODE
	<where>
	  <if test="deptCode!='d0000'">A.DEPT_CODE = #{deptCode} AND A.STATUS_CODE != 's03'</if>
	  <if test="deptCode=='d0000'">A.DEPT_CODE IS NULL AND A.STATUS_CODE != 's03'</if>
    </where>
  </select>
	
  <select id="getDeptListForManage" resultMap="DeptDtoMap">
    SELECT DEPT_CODE, DEPT_NAME, DEPT_LEVEL, EMP_NAME, DEPT_LOCATION, DEPT_CREATEDATE, USE_YN, DEPT_UPSTAIR_CODE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY D.DEPT_CODE ASC) AS RN, D.DEPT_CODE, D.DEPT_NAME,
                   D.DEPT_LEVEL, E.EMP_NAME, D.DEPT_LOCATION, D.DEPT_CREATEDATE, D.USE_YN, D.DEPT_UPSTAIR_CODE
              FROM DEPT_T D LEFT JOIN EMP_T E
                ON D.DEPT_LEADER_EMP_CODE = E.EMP_CODE)
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
	
  <select id="getDeptCount"
  	      resultType="int">
    SELECT COUNT(*)
      FROM DEPT_T
  </select>
    
  <select id="getDeptDetail" resultMap="DeptDtoMap">
    SELECT DEPT_CODE,
		   DEPT_NAME,
		   DEPT_LEVEL,
		   DEPT_LEADER_EMP_CODE,
           DEPT_LOCATION,
	       DEPT_CREATEDATE,
		   USE_YN,
		   DEPT_UPSTAIR_CODE
	  FROM DEPT_T
     WHERE DEPT_CODE = #{deptCode}
  </select>
	
  <update id="updateDeptInfo"
  		  parameterType="DeptDto">
    UPDATE DEPT_T
       SET DEPT_NAME = #{deptName},
           DEPT_LEADER_EMP_CODE = #{deptLeaderEmpCode},
           DEPT_LEVEL = #{deptLevel},
           DEPT_UPSTAIR_CODE = #{deptUpstairCode},
           DEPT_LOCATION = #{deptLocation},
           DEPT_CREATEDATE = #{deptCreatedate},
           USE_YN = #{useYn}
     WHERE DEPT_CODE= #{deptCode}
  </update>
	
  <insert id="insertDept">
    INSERT INTO DEPT_T (
        DEPT_CODE, DEPT_NAME, DEPT_LEADER_EMP_CODE,
        DEPT_LEVEL, DEPT_UPSTAIR_CODE, DEPT_LOCATION,
        DEPT_CREATEDATE, USE_YN
      ) VALUES (
          #{deptCode}, #{deptName}, #{deptLeaderEmpCode}
        , #{deptLevel}, #{deptUpstairCode}, #{deptLocation}
        , #{deptCreatedate}, #{useYn}
      )
  </insert>
  
   <select id="getDeptMember">
	SELECT E.EMP_CODE, E.EMP_NAME
      FROM DEPT_T D RIGHT JOIN EMP_T E
        ON D.DEPT_CODE = E.DEPT_CODE
     WHERE E.DEPT_CODE = #{deptCode} 
       AND E.STATUS_CODE NOT IN 's03'
  </select>
  
  <update id="appointDeptLeader"
          parameterType="DeptDto">
	UPDATE DEPT_T
	   SET DEPT_LEADER_EMP_CODE = #{empCode}
	 WHERE DEPT_CODE = #{deptCode}
  </update>
  
  <select id="getDeptListForTransfer">
	SELECT DEPT_CODE, DEPT_NAME
	  FROM DEPT_T
	 WHERE DEPT_CODE NOT IN #{deptCode}
  </select>
  
  <select id="getDeptListForSelectbox">
	SELECT DEPT_CODE, DEPT_NAME
	  FROM DEPT_T
  </select>
	
</mapper>